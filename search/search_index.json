{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>The Donut Finder API is a lightweight and efficient API designed to help developers locate donut shops, access detailed information about them, and integrate this data into their applications. The API follows a REST architecture. You can access the API\u2019s resources via HTTP requests, and responses are given in JSON format.</p> <p></p>"},{"location":"#use-cases","title":"Use Cases","text":"<p>The Donut Finder API can be used in various scenarios, such as:</p> <ul> <li> <p>Food Discovery Applications: Integrate the API to allow users to search for nearby donut shops and explore their offerings.</p> </li> <li> <p>Location-Based Services: Enhance maps or location-based platforms by displaying donut shops on interactive maps.</p> </li> <li> <p>E-commerce Integration: Help users order donuts online by connecting them with local stores that offer delivery services.</p> </li> <li> <p>Social Media Bots: Power social media bots that recommend the best donut shops based on user queries and preferences.</p> </li> <li> <p>Review Aggregation: Aggregate user reviews for donut shops and display ratings to help users make informed choices</p> </li> </ul> <ul> <li> <p> Quickstart</p> <p>Get started quickly with the API by following our comprehensive guide.</p> <p> Quickstart</p> </li> <li> <p> Reference</p> <p>Dive deep into the API's methods, endpoints, and usage examples.</p> <p> Reference</p> </li> <li> <p> Tutorials</p> <p>Learn to implement the API in real-world scenarios with step-by-step tutorials.</p> <p> Tutorials</p> </li> <li> <p> Changelog</p> <p>Stay updated with the latest changes and updates to the API.</p> <p> Changelog</p> </li> </ul>"},{"location":"#contact-us","title":"Contact Us","text":"<p>If you have any questions or need further assistance, please contact us at support@donutfinder.com.</p>"},{"location":"Changelog/changelog/","title":"What's New?","text":""},{"location":"Changelog/changelog/#110-2024-12-14","title":"1.1.0 - 2024-12-14","text":""},{"location":"Changelog/changelog/#release-highlights","title":"Release highlights","text":"<ul> <li>New Search Filters: Introduced distance-based and dietary preference filtering.</li> <li>Enhanced Error Responses: Updated error messages with detailed descriptions and suggestions.</li> </ul>"},{"location":"Changelog/changelog/#added","title":"Added","text":"<ul> <li>Search Filters by Distance and Dietary Preferences: Users can now filter donuts by proximity and dietary restrictions, such as gluten-free and vegan. Commit 3f28a6c @contributor1</li> <li>Error Messages with Debugging Suggestions: Added a <code>resolution_suggestions</code> field to error responses for easier troubleshooting. Commit 59d34a7 @contributor4</li> </ul>"},{"location":"Changelog/changelog/#changed","title":"Changed","text":"<ul> <li>Default Timeout: Reduced API default timeout duration from 30 seconds to 15 seconds to improve failover response times. Commit 4ac72f1 @contributor5</li> </ul>"},{"location":"Changelog/changelog/#fixed","title":"Fixed","text":"<ul> <li>Pagination Issues: Resolved an issue where pagination parameters were ignored for specific queries. Commit d73a5b1 @contributor7</li> </ul>"},{"location":"Changelog/changelog/#security","title":"Security","text":"<ul> <li>Input Validation Improvements: Enhanced input validation to mitigate risks like SQL injection. Commit c83d7f1 @contributor10</li> </ul>"},{"location":"Quickstart/installation/","title":"Installation","text":"<p>This guide provides the steps required to prepare your system for running tutorials for the Donut Finder Service, including setup, configuration, and verification of the environment.</p> <p>Expected preparation time: Approximately 20 minutes.</p>"},{"location":"Quickstart/installation/#installation-types","title":"Installation Types","text":"<p>This guide covers the following installation types:</p> Type Description More information Local Development Setup Setting up Donut Finder Service locally See Installation Steps"},{"location":"Quickstart/installation/#overview","title":"Overview","text":"<p>This guide explains how to set up the Donut Finder Service, including:</p> <ul> <li>Cloning the project repository.</li> <li>Installing required dependencies.</li> <li>Testing the service on your local machine.</li> </ul>"},{"location":"Quickstart/installation/#supported-versions","title":"Supported Versions","text":"Version Build Release Date Status v1.0 Initial 14/12/2024 Stable"},{"location":"Quickstart/installation/#system-requirements","title":"System Requirements","text":"<p>Before installing, ensure your system meets the following requirements:</p>"},{"location":"Quickstart/installation/#operating-systems","title":"Operating Systems","text":"<ul> <li>Windows 10 or later</li> <li>macOS (latest or LTS version)</li> <li>Linux (latest or LTS version)</li> </ul>"},{"location":"Quickstart/installation/#software-requirements","title":"Software Requirements","text":"Software Version Description Node.js Current or LTS JavaScript runtime environment json-server Current Simple REST API for JSON Git Latest Version control system Postman Desktop App Latest API development tool"},{"location":"Quickstart/installation/#installation-steps","title":"Installation Steps","text":"<p>Follow the steps below to set up the Donut Finder Service locally:</p>"},{"location":"Quickstart/installation/#step-1-clone-the-repository","title":"Step 1: Clone the Repository","text":"<p>Clone the Donut Finder repository to your local machine: <pre><code>git clone https://github.com/Aviatorscode2/Donut-Finder.git\n</code></pre> Navigate to the project directory:</p> <pre><code>cd Donut-Finder\n</code></pre>"},{"location":"Quickstart/installation/#step-2-open-the-project","title":"Step 2 - Open the Project","text":"<p>Open the project in your preferred code editor</p>"},{"location":"Quickstart/installation/#step-3-start-the-server","title":"Step 3 - Start the Server","text":"<p>Navigate to the <code>api</code> folder and start the <code>json-server</code>: <pre><code>cd api\njson-server -w donuts-db.json\n</code></pre> You should see the service running at <code>http://localhost:3000</code>.</p>"},{"location":"Quickstart/installation/#verify-installation","title":"Verify Installation","text":"<p>To confirm the service is running correctly:</p> <ul> <li>Access <code>http://localhost:3000/donut-store</code> in a web browser or Postman.</li> <li>Verify that the API returns a list of donut stores.</li> </ul>"},{"location":"Quickstart/installation/#post-installation","title":"Post Installation","text":"<p>After completing the installation, you can:</p> <ul> <li>Explore the API endpoints using Postman.</li> <li>Start building your own features in the Donut Finder Service.</li> </ul>"},{"location":"Quickstart/installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"Quickstart/installation/#problem-server-not-starting","title":"Problem: Server Not Starting","text":"<p>Cause: Missing or incorrectly installed dependencies.</p> <p>Solution: Ensure <code>json-server</code> and Node.js are installed correctly. Reinstall if necessary: <pre><code>npm install -g json-server\n</code></pre></p>"},{"location":"Quickstart/installation/#problem-no-response-from-api","title":"Problem: No Response from API","text":"<p>Cause: The server is not running.</p> <p>Solution: Restart the server in the <code>api</code> directory: <pre><code>json-server -w donuts-db.json\n</code></pre></p>"},{"location":"Quickstart/installation/#next-steps","title":"Next Steps","text":"<ul> <li> <p>Explore additional tutorials to extend the Donut Finder Service.</p> </li> <li> <p>Contribute to the project on GitHub.</p> </li> </ul>"},{"location":"Quickstart/quickstart/","title":"Send your first request","text":"<p>Welcome to the Donut Finder API! Get started with the API in minutes.</p> <p>Want to jump straight to the code? Skip the quickstart and dive into the API reference for Donut store and Donut type endpoints.</p>"},{"location":"Quickstart/quickstart/#overview","title":"Overview","text":"<p>This quickstart guides you through:</p> <ul> <li>Part A: Set up your local development environment</li> <li>Part B: Make your first API request</li> </ul> <p>It is intended for developers with basic knowledge of:</p> <ul> <li>RESTful APIs</li> <li>JSON format</li> <li>HTTP clients like Postman or <code>curl</code></li> </ul>"},{"location":"Quickstart/quickstart/#before-you-start","title":"Before you start","text":"<p>Estimated completion time: 15-20 minutes</p> <p>Before running this quickstart, ensure you download and install the following prerequisites:</p> <ul> <li>Node.js and npm: Download here.</li> <li>Git: Download here.</li> <li>Postman: Download here.</li> <li>curl: Download here.</li> </ul>"},{"location":"Quickstart/quickstart/#part-a-set-up-your-local-development-environment","title":"Part A: Set up your local development environment","text":""},{"location":"Quickstart/quickstart/#step-1-clone-the-repository","title":"Step 1: Clone the repository","text":"<ol> <li> <p>Clone the Donut Finder API repository to your local machine using Git. <pre><code>git clone https://github.com/Aviatorscode2/Donut-Finder.git\n</code></pre></p> </li> <li> <p>Navigate to the cloned repository directory: <pre><code>cd Donut-Finder\n</code></pre></p> </li> </ol>"},{"location":"Quickstart/quickstart/#step-2-start-the-server","title":"Step 2: Start the server","text":"<ol> <li> <p>Navigate to the <code>api</code> directory: <pre><code>cd api\n</code></pre></p> </li> <li> <p>Start the server using the following command: <pre><code>json-server -w donuts-db.json\n</code></pre></p> </li> <li> <p>Verify that the server is running by visiting the following endpoints in your browser or HTTP client: <pre><code>http://localhost:3000/donut_store\nhttp://localhost:3000/donut_type\n</code></pre></p> </li> </ol>"},{"location":"Quickstart/quickstart/#part-b-make-your-first-api-request","title":"Part B: Make your first API request","text":""},{"location":"Quickstart/quickstart/#using-postman","title":"Using Postman","text":"<ol> <li> <p>Open Postman: Install and launch Postman if you haven\u2019t already.</p> </li> <li> <p>Create a New Request:</p> <ul> <li>Click on \"New\" and select \"Request\".</li> <li>Enter a name for the request, e.g., \"Add New Donut Store\".</li> </ul> </li> <li> <p>Set Up the Request:</p> <ul> <li>Method: <code>POST</code></li> <li>URL: <code>http://localhost:3000/donut_store</code>.</li> </ul> </li> <li> <p>Set Headers:</p> <ul> <li><code>Key: Content-Type</code></li> <li><code>Value: application/json</code></li> </ul> </li> <li> <p>Add Request Body:</p> <ul> <li>Navigate to the \"Body\" tab.</li> <li>Choose \"raw\" and select \"JSON.\"</li> <li>Enter the following JSON data:</li> </ul> <pre><code>{\n    \"store_name\": \"Glazed and Confused Donut Shop\",\n    \"street_address\": \"5678 Sugar Lane, Sweetville, CA 91405\",\n    \"phone\": \"(555) 456-7890\",\n    \"id\": 4,\n    \"donut inventory\": [\n        {\n            \"donut_type\": \"glazed\",\n            \"variation_filling\": \"none\",\n            \"variation_topping\": \"glazed, chocolate\"\n        }\n    ]\n}\n</code></pre> </li> <li> <p>Send the Request:</p> <ul> <li>Click \"Send\"</li> <li>Verify a 201 Created response with the details of the newly added donut store.</li> </ul> </li> </ol>"},{"location":"Quickstart/quickstart/#using-curl","title":"Using curl","text":"<ol> <li> <p>Open your terminal: Ensure curl is installed. Verify by running:     <pre><code>curl --version\n</code></pre></p> </li> <li> <p>Run the curl Command:</p> <ul> <li>Use the following command to make a POST request to add a new donut store:</li> </ul> <pre><code>curl -X POST http://localhost:3000/donut_store \\\n-H \"Content-Type: application/json\" \\\n-d '{\n    \"store_name\": \"Glazed and Confused Donut Shop\",\n    \"street_address\": \"5678 Sugar Lane, Sweetville, CA 91405\",\n    \"phone\": \"(555) 456-7890\",\n    \"id\": 4,\n    \"donut inventory\": [\n        {\n            \"donut_type\": \"glazed\",\n            \"variation_filling\": \"none\",\n            \"variation_topping\": \"glazed, chocolate\"\n        }\n    ]\n}'\n</code></pre> </li> <li> <p>Check the response:</p> <ul> <li>A successful request returns a <code>201</code> Created status code with the newly added donut store.</li> </ul> </li> </ol> <p>With these steps, you have successfully made your first POST request to the Donut Finder API using both Postman and <code>curl</code>. This is a fundamental operation that can be expanded to perform other tasks with the API.</p> <p>If you don't see the list of donut stores, or receive an error in any step of the procedure, investigate and correct the error before continuing. Some common situations that cause errors include:</p> <ol> <li>You mistyped a command.</li> <li>You aren't in the correct directory.</li> </ol>"},{"location":"Quickstart/quickstart/#next-steps","title":"Next Steps","text":"<p>Now that you\u2019ve completed this quickstart, explore more features of the Donut Finder API:</p> <ul> <li>Donut Store API Reference</li> <li>Donut Type API Reference</li> </ul>"},{"location":"Reference/donut-store/","title":"Donut Store API Reference","text":"<p>The Donut Store API provides endpoints to interact with donut shop data in the Donut Finder service. This API allows you to retrieve information about donut shops, as well as create, update, and delete donut shop records.</p>"},{"location":"Reference/donut-store/#base-url","title":"Base URL","text":"<pre><code>{base_url}/donut_store\n</code></pre>"},{"location":"Reference/donut-store/#version","title":"Version","text":"<p>The current API version is 1.0.</p>"},{"location":"Reference/donut-store/#endpoints","title":"Endpoints","text":""},{"location":"Reference/donut-store/#retrieve-all-donut-stores","title":"Retrieve All Donut Stores","text":"<p>Returns a list of all donut stores and their inventory details.</p>"},{"location":"Reference/donut-store/#endpoint","title":"Endpoint","text":"<pre><code>GET {base_url}/donut_store\n</code></pre>"},{"location":"Reference/donut-store/#request-example","title":"Request example","text":"<pre><code>curl -X GET http://localhost:3000/donut_store\n</code></pre>"},{"location":"Reference/donut-store/#response-example","title":"Response example","text":"<pre><code>[\n    {\n        \"store_name\": \"Honey Kettle Donut Shop\",\n        \"street_address\": \"1234 Nectar Ave, Honeyville, CA 91401 \",\n        \"phone\": \"(555) 123-1234\",\n        \"id\": \"1\",\n        \"donut inventory\": [\n            {\n                \"donut_type\": \"bear claw\",\n                \"variation_filling\": \"almond paste, raspberry, chocolate, vanilla cream\",\n                \"variation_topping\": \"chocolate, powdered sugar\"\n            },\n            {\n                \"donut_type\": \"cruller\",\n                \"variation_filling\": \"none\",\n                \"variation_topping\": \"chocolate, glazed, maple, pink\"\n            }\n        ]\n    },\n    {\n        \"store_name\": \"Michaelangelo's Morsels\",\n        \"street_address\": \"222 Yum Drive, Chocolate, CA 91403\",\n        \"phone\": \"(555) 222-2212\",\n        \"id\": \"2\",\n        \"donut inventory\": [\n            {\n                \"donut_type\": \"bear claw\",\n                \"variation_filling\": \"none\",\n                \"variation_topping\": \"chocolate, glazed, maple, pink\"\n            },\n            {\n                \"donut_type\": \"donut holes\",\n                \"variation_filling\": \"none\",\n                \"variation_topping\": \"chocolate, glazed\"\n            }\n        ]\n    }\n]\n</code></pre>"},{"location":"Reference/donut-store/#retrieve-a-donut-store-by-id","title":"Retrieve a Donut Store by ID","text":"<p>Fetches details of a specific donut store by its unique <code>id</code>.</p>"},{"location":"Reference/donut-store/#endpoint_1","title":"Endpoint","text":"<pre><code>GET {base_url}/donut_store/{id}\n</code></pre>"},{"location":"Reference/donut-store/#path-parameters","title":"Path parameters","text":"Parameter name Type Required Description <code>id</code> number required The unique ID of the donut store."},{"location":"Reference/donut-store/#request-example_1","title":"Request example","text":"<pre><code>curl -X GET http://localhost:3000/donut_store/1\n</code></pre>"},{"location":"Reference/donut-store/#response-example_1","title":"Response example","text":"<pre><code>{\n  \"store_name\": \"Honey Kettle Donut Shop\",\n  \"street_address\": \"1234 Nectar Ave, Honeyville, CA 91401\",\n  \"phone\": \"(555) 123-1234\",\n  \"id\": 1,\n  \"donut_inventory\": [\n    {\n      \"donut_type\": \"bear claw\",\n      \"variation_filling\": \"almond paste, raspberry, chocolate, vanilla cream\",\n      \"variation_topping\": \"chocolate, powdered sugar\"\n    }\n  ]\n}\n</code></pre>"},{"location":"Reference/donut-store/#create-a-new-donut-store","title":"Create a New Donut Store","text":"<p>Adds a new donut store to the database.</p>"},{"location":"Reference/donut-store/#endpoint_2","title":"Endpoint","text":"<pre><code>POST {base_url}/donut_store\n</code></pre>"},{"location":"Reference/donut-store/#request-body","title":"Request body","text":"<p>In the request body, specify a JSON representation of the <code>donut_store</code> object. The following table lists the properties that are required when you add a new donut store. </p> Field Type Required Description <code>store_name</code> string required The name of the donut store. <code>street_address</code> string required The street address of the donut store. <code>phone</code> string required The store\u2019s contact phone number. <code>donut inventory</code> array required A list of donuts available."},{"location":"Reference/donut-store/#request-example_2","title":"Request example","text":"<pre><code>curl -X POST http://localhost:3000/donut_store \\ \n    -H \"Content-Type: application/json\" \\\n    -d '{\n        \"store_name\": \"Honey Kettle Donut Shop\",\n        \"street_address\": \"1234 Nectar Ave, Honeyville, CA 91401 \",\n        \"phone\": \"(555) 123-1234\",\n        \"donut inventory\": [\n            {\n                \"donut_type\": \"bear claw\",\n                \"variation_filling\": \"almond paste, raspberry, chocolate, vanilla cream\",\n                \"variation_topping\": \"chocolate, powdered sugar\"\n            }\n        ]\n        }\n</code></pre>"},{"location":"Reference/donut-store/#response-example_2","title":"Response example","text":"<pre><code>{\n  \"id\": 4,\n  \"message\": \"Donut store created successfully.\"\n}\n</code></pre>"},{"location":"Reference/donut-store/#update-a-donut-store","title":"Update a Donut Store","text":"<p>Updates details of an existing donut store.</p>"},{"location":"Reference/donut-store/#endpoint_3","title":"Endpoint","text":"<pre><code>PUT {base_url}/donut_store/{id}\n</code></pre>"},{"location":"Reference/donut-store/#path-parameters_1","title":"Path parameters","text":"Parameter name Type Required Description <code>id</code> number required The unique ID of the donut store."},{"location":"Reference/donut-store/#request-body_1","title":"Request body","text":"Field Type Required Description <code>store_name</code> string optional The updated name of the store. <code>street_address</code> string optional The updated address. <code>phone</code> string optional The updated phone number. <code>donut inventory</code> array optional The updated inventory details."},{"location":"Reference/donut-store/#request-example_3","title":"Request example","text":"<pre><code>curl -X PUT 'http://donutfinder.api/v1/donut_store/1' \\\n    -H 'Content-Type: application/json' \\\n    -d '{\n    \"store_name\": \"Honey Kettle Donut House\",\n    \"phone\": \"(555) 123-4321\"\n    }'\n</code></pre>"},{"location":"Reference/donut-store/#response-example_3","title":"Response example","text":"<pre><code>{\n    \"id\": 1,\n    \"message\": \"Donut store updated successfully.\"\n}\n</code></pre>"},{"location":"Reference/donut-store/#delete-a-donut-store","title":"Delete a Donut Store","text":"<p>Deletes a donut store by its unique ID.</p>"},{"location":"Reference/donut-store/#endpoint_4","title":"Endpoint","text":"<pre><code>DELETE {base_url}/donut_store/{id}\n</code></pre>"},{"location":"Reference/donut-store/#path-parameters_2","title":"Path parameters","text":"Parameter name Type Required Description <code>id</code> number required The unique ID of the donut store."},{"location":"Reference/donut-store/#request-example_4","title":"Request example","text":"<pre><code>curl -X DELETE http://localhost:3000/donut_store/1\n</code></pre>"},{"location":"Reference/donut-store/#response-example_4","title":"Response example","text":"<pre><code>{\n    \"message\": \"Donut store deleted successfully.\"\n}\n</code></pre>"},{"location":"Reference/donut-store/#error-responses","title":"Error responses","text":"<p>The API uses standard HTTP status codes to indicate the success or failure of a request.</p> Status code Description 200 Success 201 Resource created successfully 400 Bad request (e.g., missing required fields) 404 Resource not found 500 Internal server error <p>For further assistance, contact our support team.</p>"},{"location":"Reference/donut-type/","title":"Donut Type API Reference","text":"<p>The Donut Type API provides endpoints to interact with donut type data in the Donut Finder service. You can retrieve information about donut types, as well as create, update, and delete donut type records.</p> <p>The Donut Type API follows a REST architecture. You can access the API\u2019s resources via HTTP requests, and responses are given in JSON format.</p>"},{"location":"Reference/donut-type/#base-url","title":"Base URL","text":"<pre><code>{base_url}/donut_type\n</code></pre>"},{"location":"Reference/donut-type/#version","title":"Version","text":"<p>The current API version is 1.0.</p>"},{"location":"Reference/donut-type/#endpoints","title":"Endpoints","text":""},{"location":"Reference/donut-type/#retrieve-all-donut-types","title":"Retrieve All Donut Types","text":"<p>Returns a list of all available donut types, including their IDs and associated store IDs. Note: The number of records returned is not limited, but pagination options are not currently supported by this endpoint.</p>"},{"location":"Reference/donut-type/#endpoint","title":"Endpoint","text":"<pre><code>GET {base_url}/donut_type\n</code></pre>"},{"location":"Reference/donut-type/#request-example","title":"Request example","text":"<pre><code>curl -X GET http://localhost:3000/donut_type\n</code></pre>"},{"location":"Reference/donut-type/#response-example","title":"Response example","text":"<pre><code>[\n    {\n        \"donut_name\": \"bear claw\",\n        \"id\": 1,\n        \"donut_stores\": [1, 2]\n    },\n    {\n        \"donut_name\": \"cruller\",\n        \"id\": 2,\n        \"donut_stores\": [1, 3]\n    }\n]\n</code></pre>"},{"location":"Reference/donut-type/#retrieve-a-donut-type-by-id","title":"Retrieve a Donut Type by ID","text":"<p>Fetches details of a specific donut type using its unique <code>id</code>.</p>"},{"location":"Reference/donut-type/#endpoint_1","title":"Endpoint","text":"<pre><code>GET {base_url}/donut_type/{id}\n</code></pre>"},{"location":"Reference/donut-type/#path-parameters","title":"Path parameters","text":"Parameter name Type Required Description <code>id</code> number required The unique ID of the donut type."},{"location":"Reference/donut-type/#request-example_1","title":"Request example","text":"<pre><code>curl -X GET http://localhost:3000/donut_type/1\n</code></pre>"},{"location":"Reference/donut-type/#response-example_1","title":"Response example","text":"<pre><code>{\n    \"donut_name\": \"bear claw\",\n    \"id\": 1,\n    \"donut_stores\": [1, 2]\n}\n</code></pre>"},{"location":"Reference/donut-type/#create-a-new-donut-type","title":"Create a New Donut Type","text":"<p>Adds a new donut type to the database.</p>"},{"location":"Reference/donut-type/#endpoint_2","title":"Endpoint","text":"<pre><code>POST {base_url}/donut_type\n</code></pre>"},{"location":"Reference/donut-type/#request-body","title":"Request body","text":"<p>In the request body, specify a JSON representation of the <code>donut_type</code> object. The following table lists the properties that are required when you add a new donut type.</p> Field Type Required Description <code>donut_name</code> string required The name of the new donut type. <code>donut_stores</code> array required List of store IDs where it is available."},{"location":"Reference/donut-type/#request-example_2","title":"Request example","text":"<pre><code>curl -X POST 'http://donutfinder.net/api/donut-type' \\\n    -H 'Content-Type: application/json' \\\n    -d '{\n        \"donut_name\": \"glazed\",\n        \"donut_stores\": [1, 3]\n    }'\n</code></pre>"},{"location":"Reference/donut-type/#response-example_2","title":"Response example","text":"<pre><code>{\n    \"donut_name\": \"glazed\",\n    \"id\": 5,\n    \"donut_stores\": [1, 3]\n}\n</code></pre>"},{"location":"Reference/donut-type/#update-a-donut-type","title":"Update a Donut Type","text":"<p>Updates details of an existing donut type.</p>"},{"location":"Reference/donut-type/#endpoint_3","title":"Endpoint","text":"<pre><code>PUT {base_url}/donut_type/{id}\n</code></pre>"},{"location":"Reference/donut-type/#path-parameters_1","title":"Path parameters","text":"Parameter name Type Required Description <code>id</code> number required The unique ID of the donut type."},{"location":"Reference/donut-type/#request-body_1","title":"Request body","text":"Field Type Required Description <code>donut_name</code> string optional The updated name of the type. <code>donut_stores</code> array optional The updated address."},{"location":"Reference/donut-type/#request-example_3","title":"Request example","text":"<pre><code>curl -X PUT 'http://donutfinder.net/api/donut-type/1' \\\n    -H 'Content-Type: application/json' \\\n    -d '{\n        \"donut_name\": \"chocolate bear claw\",\n        \"donut_stores\": [1, 2, 4]\n    }'\n</code></pre>"},{"location":"Reference/donut-type/#response-example_3","title":"Response example","text":"<pre><code>{\n    \"donut_name\": \"chocolate bear claw\",\n    \"id\": 1,\n    \"donut_stores\": [1, 2, 4]\n}\n</code></pre>"},{"location":"Reference/donut-type/#delete-a-donut-type","title":"Delete a Donut Type","text":"<p>Deletes a donut type by its unique ID. If the specified ID does not exist, no action is taken, and an error message is returned in the response.</p>"},{"location":"Reference/donut-type/#endpoint_4","title":"Endpoint","text":"<pre><code>DELETE {base_url}/donut_type/{id}\n</code></pre>"},{"location":"Reference/donut-type/#path-parameters_2","title":"Path parameters","text":"Parameter name Type Required Description <code>id</code> number required The unique ID of the donut type."},{"location":"Reference/donut-type/#request-example_4","title":"Request example","text":"<pre><code>curl -X DELETE http://localhost:3000/donut_type/1\n</code></pre>"},{"location":"Reference/donut-type/#response-example_4","title":"Response example","text":"<pre><code>{\n    \"message\": \"Donut type deleted successfully.\"\n}\n</code></pre>"},{"location":"Reference/donut-type/#error-responses","title":"Error responses","text":"<p>The API uses standard HTTP status codes to indicate the success or failure of a request.</p> Status code Description 200 Success 201 Resource created successfully 400 Bad request (e.g., missing required fields) 404 Resource not found 500 Internal server error <p>For further assistance, contact our support team.</p>"},{"location":"Reference/handling-errors/","title":"Handling Errors in the Donut Finder API","text":"<p>The Donut Finder API follows standard HTTP status codes to indicate the success or failure of an API call. Here is an overview of common HTTP status codes and their meanings, along with typical reasons for each code.</p>"},{"location":"Reference/handling-errors/#http-status-code-summary","title":"HTTP Status Code Summary","text":"<p>This section summarizes the most frequent HTTP status codes returned by the API and describes their common causes.</p> HTTP Status Code Status Text Description Common Causes 200 OK The request succeeded. The exact result depends on the HTTP method used. With <code>GET</code>, the requested resource is returned. With <code>POST</code>, a new resource is created or updated. N/A 400 Bad Request The request was unacceptable, often due to missing a required parameter or malformed request body. Missing required parameters, malformed JSON, or invalid data formats. 404 Not Found The requested resource does not exist. Incorrect endpoint URL, attempting to access non-existent resources, or typo in the request. 405 Method Not Allowed The HTTP method used is not supported by the endpoint. Using an inappropriate HTTP method, like sending <code>GET</code> instead of <code>POST</code>, or trying to delete where only updates are allowed. 500 Internal Server Error The server encountered an unexpected condition that prevented it from fulfilling the request. A generic server-side issue, such as a crash, unhandled exceptions, or resource constraints. 503 Service Unavailable The server cannot handle the request. Server is temporary overloaded or insufficient resources to process the request. No Status code ECONNREFUSED The service refused the connection. The service is offline, or you're connecting to the wrong port or hostname. Check if the service is running and try again with the correct port/hostname."},{"location":"Support/community/","title":"Community","text":"<p>Join the vibrant Donut Finder API community to connect with fellow developers, share ideas, and collaborate on exciting projects. Here are some ways to get involved:</p>"},{"location":"Support/community/#1-github-discussions","title":"1. GitHub Discussions","text":"<p>Participate in conversations, ask questions, and propose new features on our GitHub Discussions page.</p>"},{"location":"Support/community/#2-slack-workspace","title":"2. Slack Workspace","text":"<p>Join our dedicated Slack workspace to chat with the community in real time. Request an invite here.</p>"},{"location":"Support/community/#3-social-media","title":"3. Social Media","text":"<p>Stay updated on the latest news and events by following us on social media:</p> <ul> <li>Twitter</li> <li>LinkedIn</li> </ul>"},{"location":"Support/community/#4-contribute-to-the-project","title":"4. Contribute to the Project","text":"<p>We welcome contributions! Here\u2019s how you can get started:</p> <ul> <li>Fork the repository and make pull requests.</li> <li>Report issues or suggest improvements on our GitHub Issues page.</li> <li>Review the Contributing Guidelines for detailed instructions.</li> </ul>"},{"location":"Support/community/#5-events-and-webinars","title":"5. Events and Webinars","text":"<p>Attend our upcoming events, webinars, and coding challenges to learn and connect with others. Check the schedule on our Events Page.</p>"},{"location":"Support/faq/","title":"FAQ","text":""},{"location":"Support/faq/#general-questions","title":"General Questions","text":""},{"location":"Support/faq/#what-is-the-donut-finder-api","title":"What is the Donut Finder API?","text":"<p>The Donut Finder API is a service designed to help users locate and explore donut shops near them with ease. It provides endpoints to access data about donut shops, their locations, and additional details.</p>"},{"location":"Support/faq/#who-can-use-the-donut-finder-api","title":"Who can use the Donut Finder API?","text":"<p>Anyone interested in building applications to find donut shops can use the API. It is ideal for developers, hobbyists, and businesses.</p>"},{"location":"Support/faq/#getting-started","title":"Getting Started","text":""},{"location":"Support/faq/#how-do-i-start-using-the-api","title":"How do I start using the API?","text":"<p>Follow these steps to get started:</p> <ol> <li>Clone the repository from GitHub.</li> <li>Set up the environment by following the Installation Guide.</li> <li>Start the API server and begin testing the endpoints.</li> </ol>"},{"location":"Support/faq/#is-the-api-free-to-use","title":"Is the API free to use?","text":"<p>Yes, the Donut Finder API is free to use for personal and educational purposes. For commercial use, contact us for licensing details.</p>"},{"location":"Support/faq/#technical-questions","title":"Technical Questions","text":""},{"location":"Support/faq/#what-are-the-supported-endpoints","title":"What are the supported endpoints?","text":"<p>Refer to the API Documentation for a complete list of supported endpoints and their usage.</p>"},{"location":"Support/faq/#how-do-i-report-a-bug","title":"How do I report a bug?","text":"<p>You can report bugs on our GitHub Issues page. Please provide as much detail as possible, including steps to reproduce the issue.</p>"},{"location":"Support/faq/#can-i-request-a-new-feature","title":"Can I request a new feature?","text":"<p>Yes! Submit feature requests through our GitHub Discussions page or the GitHub Issues page.</p>"},{"location":"Support/faq/#troubleshooting","title":"Troubleshooting","text":""},{"location":"Support/faq/#why-is-the-api-server-not-starting","title":"Why is the API server not starting?","text":"<p>Ensure all prerequisites are installed correctly. Check the Troubleshooting section in the Installation Guide for more details.</p>"},{"location":"Support/faq/#what-should-i-do-if-i-receive-an-error-response-from-the-api","title":"What should I do if I receive an error response from the API?","text":"<ul> <li>Double-check the request parameters and endpoint.</li> <li>Ensure the server is running.</li> <li>Refer to the API Documentation for correct usage.</li> </ul>"},{"location":"Support/faq/#how-do-i-reset-the-database","title":"How do I reset the database?","text":"<p>To reset the database, delete the <code>db.json</code> file in the <code>api</code> folder and replace it with a backup or a fresh version. Restart the server to apply changes.</p> <p>For more questions, reach out to us via GitHub Discussions or email us at support@donutfinderapi.com.</p>"},{"location":"tutorials/donut-store/filter-store-by-location/","title":"How to Filter Stores by Location","text":"<p>In this tutorial, you'll learn how to filter donut stores by their location using the Donut Finder API.</p>"},{"location":"tutorials/donut-store/filter-store-by-location/#before-you-start","title":"Before You Start","text":"<p>Before starting this tutorial, ensure you set up your test environment by following the steps outlined in the installation guide.</p> <p>Expect this tutorial to take about 5-3 minutes to complete.</p>"},{"location":"tutorials/donut-store/filter-store-by-location/#tutorial-filter-store-by-location","title":"Tutorial: Filter Store by Location","text":"<p>To get started, you need to format and send a GET request to filter donut stores by their location.</p>"},{"location":"tutorials/donut-store/filter-store-by-location/#use-postman-to-filter-donut-stores-by-location","title":"Use Postman to filter donut stores by location:","text":"<ul> <li> <p>Open Postman and create a new request.</p> </li> <li> <p>Set the request type to <code>GET</code>.</p> </li> <li> <p>Enter the URL:        <pre><code>{base_url}/donut_store?street_address={location}\n</code></pre>     Replace <code>{location}</code> with the location you want to filter by, e.g., \"CA\".</p> </li> <li> <p>Click the Send button. You should see a response containing the details of the matching donut stores in JSON format. For example:</p> <pre><code>[\n  {\n    \"store_name\": \"Honey Kettle Donut Shop\",\n    \"street_address\": \"1234 Nectar Ave, Honeyville, CA 91401\",\n    \"phone\": \"(555) 123-1234\",\n    \"id\": 1,\n    \"donut inventory\": [\n      {\n        \"donut_type\": \"bear claw\",\n        \"variation_filling\": \"almond paste, raspberry, chocolate, vanilla cream\",\n        \"variation_topping\": \"chocolate, powdered sugar\"\n      },\n      {\n        \"donut_type\": \"cruller\",\n        \"variation_filling\": \"none\",\n        \"variation_topping\": \"chocolate, glazed, maple, pink\"\n      },\n      // More donuts...\n    ]\n  },\n  {\n    \"store_name\": \"Michaelangelo's Morsels\",\n    \"street_address\": \"222 Yum Drive, Chocolate, CA 91403\",\n    \"phone\": \"(555) 222-2212\",\n    \"id\": 2,\n    \"donut inventory\": [\n      {\n        \"donut_type\": \"bear claw\",\n        \"variation_filling\": \"none\",\n        \"variation_topping\": \"chocolate, glazed, maple, pink\"\n      },\n      {\n        \"donut_type\": \"donut holes\",\n        \"variation_filling\": \"none\",\n        \"variation_topping\": \"chocolate, glazed\"\n      }\n    ]\n  }\n]\n</code></pre> </li> </ul>"},{"location":"tutorials/donut-store/filter-store-by-location/#use-curl-to-filter-donut-stores-by-location","title":"Use <code>curl</code> to filter donut stores by location:","text":"<ul> <li> <p>Open your terminal.</p> </li> <li> <p>Run the following <code>curl</code> command (replace <code>{location}</code> with the location you want to filter by, e.g., \"CA\"):</p> <pre><code>curl -X GET \"{base_url}/donut_store?street_address={location}\"\n</code></pre> </li> <li> <p>You should see a response containing the details of the matching donut stores in JSON format, similar to the Postman example above.</p> </li> </ul> <p>Note: If no donut store name matches the search criteria, the service will return an empty array, indicating that there are no donut stores with the specified name.</p>"},{"location":"tutorials/donut-store/filter-store-by-location/#summary","title":"Summary","text":"<p>In this tutorial, you learned how to:</p> <ul> <li>Format a GET request to filter donut stores by location</li> <li>Use Postman to send a GET request to filter donut stores by location</li> <li>Use <code>curl</code> to send a GET request to filter donut stores by location</li> </ul>"},{"location":"tutorials/donut-store/search-store-by-name/","title":"How to Search for Donut Stores by Name","text":"<p>In this tutorial, you'll learn how to search for a donut store by its name using the Donut Finder API. </p>"},{"location":"tutorials/donut-store/search-store-by-name/#before-you-start","title":"Before You Start","text":"<p>Before starting this tutorial, ensure you set up your test environment by following the steps outlined in the installation guide.</p> <p>Expect this tutorial to take about 5-3 minutes to complete.</p>"},{"location":"tutorials/donut-store/search-store-by-name/#tutorial-search-donut-store-by-name","title":"Tutorial: Search Donut Store by Name","text":"<p>To get started, you need to format and send a GET request to search for a donut store by its name.</p>"},{"location":"tutorials/donut-store/search-store-by-name/#use-postman-to-search-for-a-donut-store-by-name","title":"Use Postman to search for a donut store by name:","text":"<ul> <li> <p>Open Postman and create a new request.</p> </li> <li> <p>Set the request type to <code>GET</code>.</p> </li> <li> <p>Enter the URL:      <pre><code>{base_url}/donut_store?store_name={name}\n</code></pre>   Replace <code>{store_name}</code> with the name or partial name of the store you want to search for.</p> </li> <li> <p>Click the Send button. You should see a response containing the details of the matching donut stores in JSON format. For example:</p> <pre><code>[\n  {\n    \"store_name\": \"Honey Kettle Donut Shop\",\n    \"street_address\": \"1234 Nectar Ave, Honeyville, CA 91401\",\n    \"phone\": \"(555) 123-1234\",\n    \"id\": 1,\n    \"donut inventory\": [\n      {\n        \"donut_type\": \"bear claw\",\n        \"variation_filling\": \"almond paste, raspberry, chocolate, vanilla cream\",\n        \"variation_topping\": \"chocolate, powdered sugar\"\n      },\n      {\n        \"donut_type\": \"cruller\",\n        \"variation_filling\": \"none\",\n        \"variation_topping\": \"chocolate, glazed, maple, pink\"\n      },\n      // More donuts...\n    ]\n  }\n]\n</code></pre> </li> </ul>"},{"location":"tutorials/donut-store/search-store-by-name/#use-curl-to-search-for-a-donut-store-by-name","title":"Use <code>curl</code> to search for a donut store by name:","text":"<ul> <li> <p>Open your terminal.</p> </li> <li> <p>Run the following <code>curl</code> command (replace <code>{store_name}</code> with the name or partial name of the store you want to search for):       <pre><code>curl -X GET \"{base_url}/donut_store?name={store_name}\"\n</code></pre></p> </li> <li> <p>You should see a response containing the details of the matching donut stores in JSON format, similar to the example shown above.</p> </li> </ul> <p>Note: If no donut store name matches the search criteria, the service will return an empty array, indicating that there are no donut stores with the specified name.</p>"},{"location":"tutorials/donut-store/search-store-by-name/#summary","title":"Summary","text":"<p>In this tutorial, you learned how to:</p> <ul> <li>Format a GET request to search for a donut store by name</li> <li>Use Postman to send a GET request to search for a donut store by name</li> <li>Use <code>curl</code> to send a GET request to search for a donut store by name</li> </ul>"},{"location":"tutorials/donut-type/search-donut-types-by-name/","title":"How to Search for Donut Type by Name","text":"<p>In this tutorial, you'll learn how to search donut stores by their location using the Donut Finder API.</p>"},{"location":"tutorials/donut-type/search-donut-types-by-name/#before-you-start","title":"Before You Start","text":"<p>Before starting this tutorial, ensure you set up your test environment by following the steps outlined in the installation guide.</p> <p>Expect this tutorial to take about 5-3 minutes to complete.</p>"},{"location":"tutorials/donut-type/search-donut-types-by-name/#search-donut-type-by-name","title":"Search Donut Type by Name","text":""},{"location":"tutorials/donut-type/search-donut-types-by-name/#use-postman-to-search-for-a-donut-type-by-name","title":"Use Postman to search for a donut type by name:","text":"<ul> <li> <p>Open Postman and create a new request.</p> </li> <li> <p>Set the request type to <code>GET</code>.</p> </li> <li> <p>Enter the URL:      <pre><code>{base_url}/donut_type?donut_name={donut_name}\n</code></pre>     Replace <code>{donut_name}</code> with the name of the donut type you want to search for.</p> </li> <li> <p>Click the \"Send\" button. You should see a response containing the details of the matching donut type in JSON format.</p> </li> </ul>"},{"location":"tutorials/donut-type/search-donut-types-by-name/#use-curl-to-search-for-a-donut-type-by-name","title":"Use <code>curl</code> to search for a donut type by name:","text":"<ul> <li> <p>Open your terminal.</p> </li> <li> <p>Run the following <code>curl</code> command (replace <code>{donut_name}</code> with the name of the donut type you want to search for):</p> <pre><code>curl -X GET \"{base_url}/donut_type?donut_name={donut_name}\"\n</code></pre> </li> <li> <p>You should see a response containing the details of the matching donut type in JSON format.</p> </li> </ul> <p>Note: If no donut store name matches the search criteria, the service will return an empty array, indicating that there are no donut stores with the specified name.</p>"},{"location":"tutorials/donut-type/search-donut-types-by-name/#summary","title":"Summary","text":"<p>In this tutorial, you learned how to:</p> <ul> <li>Format a GET request to search for a donut type by name</li> <li>Use Postman to send a GET request to search for a donut type by name</li> <li>Use <code>curl</code> to send a GET request to search for a donut type by name</li> </ul>"}]}